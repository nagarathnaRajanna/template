swagger: "2.0"
info:
  version: "0.0.1"
  title: Template
# during dev, should point to your local machine
host: localhost:10049
# basePath prefixes all resource paths 
basePath: /template
# 
schemes:
  # tip: remove http to make production-grade
  - http
  #- https
# format of bodies a client can send (Content-Type)
consumes:
  - multipart/form-data
  - application/json
# format of the responses to the client (Accepts)
produces:
  - application/json
  - text/plain
paths:
  /v1:
    x-swagger-router-controller: controller
    # get:
    #   description: Returns all the Templates to the user
    #   operationId: v1_fetchTemplate
    #   responses:
    #     200:
    #       description: Success
    #       schema:
    #         $ref: "#/definitions/TempllateResponse"
    #     400:
    #       description: Bad Request 
    get:
      description: Retrive a list of available Products
      operationId: v1_fetchTemplate
      parameters:
        - name: page
          in: query
          type: integer
          description: Page number of the request
        - name: count
          in: query
          type: integer
          description: Number of brands per page
        - name: filter
          in: query
          type: string
      responses:
        200:
          description: List of the entites
          schema:
            $ref: "#/definitions/TemplateDefinition1"
        400:
          description: Bad parameters
        404:
          description: No products to list with the given parameter set.
        500:
          description: Internal server error
    post: 
      description: creates the Template
      consumes:
        - multipart/form-data
      operationId: v1_templateCreate
      parameters:
        - name: data
          in: body
          required: true
          schema:
            $ref : "#/definitions/templateDefinition"
      responses:
        201:
          description: Success
          schema:
            $ref: "#/definitions/TempllateResponse"
        400:
          description: Bad Request
          schema:
            $ref: "#/definitions/ErrorResponse"
  '/v1/count':
    x-swagger-router-controller:  controller
    get:
      operationId:  v1_count
      parameters:
        - name:  filter
          in: query
          type: string
          description:  Count the number of fields after applying certain parameters
      responses:
        200:
          description:  sucess
          schema:
            type: string
        400:
          description:  Error
          schema:
            $ref: "#/definitions/ErrorResponse"
  '/v1/{id}':
    x-swagger-router-controller: controller
    get:
      operationId: v1_getTemplateById
      parameters:
        - name: id
          in: path
          type: string
          description: ID of the Template
          required: true
      responses:
        200:
          description: Success
          schema:
            type: string
        400:
          description: Bad Request
        404 :
          description: Template Not found
    put:
      operationId: v1_updateTemplate
      parameters:
        - name: id
          in: path
          type: string
          description: ID of the Template
          required: true
        - name: data
          in: body
          description: Data requiring update
          required: true
          schema:
            $ref: "#/definitions/templateDefinition"
      responses:
        200:
          description: Success
          schema:
            type: string
        400:
          description: Bad Request
          schema:
            type: string
        404 :
          description: Template Not found 
          schema:
            type: string 
    delete :
      operationId: v1_templateDelete
      parameters:
        - name: id
          in: path
          type: string
          description: ID of the Template
          required: true
      responses:
        200:
          description: Success
          schema:
            type: string
        400:
          description: Bad Request
        404 :
          description: Template Not found  
  '/v1/templateParse':
    x-swagger-router-controller: controller
    post:
      consumes: 
        - multipart/form-data
      operationId: v1_fileParse
      parameters:
        - name: file
          in: formData
          type: file
          required:  true
          description: Bulk Product Parse
        - name: templateId
          in:  formData
          type: string
          required:  true
          description: Template id
        # - name: templateName
        #   in:  formData
        #   type: string
        #   required:  true
        #   description: Template Name  
      responses:
        200:
          description: OK
          schema:
            type: string
  '/v1/download':
    x-swagger-router-controller: controller
    get:
      operationId: v1_download
      parameters:
        - name: type
          in: query
          type: string
          description: Type of the file to be downloaded.
          required: true
          enum:
            - csv
            - xls
            - xlsx
            - pdf
        - name: templateId
          in: query
          type: string
          description: Template Id for importing the data
          required: true
      responses:
        200:
          description: OK
          schema:
            type: string
        400:
          description: Bad parameters
          schema:
            $ref: "#/definitions/ErrorResponse"
        404:
          description: Coudnt locate the product
          schema:
            $ref: "#/definitions/ErrorResponse"
        500:
          description: Internal server error
          schema:
            $ref: "#/definitions/ErrorResponse"
  '/v1/reportsdownload/{templateId}':
    x-swagger-router-controller: controller
    post:
      operationId: v1_reportdownload
      parameters:
        - name: templateId
          in: path
          type: string
          description: downloads the reports for the particular template
          required: true
        - name: data
          in: body
          required: true
          schema:
            $ref : "#/definitions/templateDefinition"
      responses:
        200:
          description: OK
          schema:
            type: string
        400:
          description: Bad parameters
          schema:
            $ref: "#/definitions/ErrorResponse"
        404:
          description: Coudnt locate the product
          schema:
            $ref: "#/definitions/ErrorResponse"
        500:
          description: Internal server error
          schema:
            $ref: "#/definitions/ErrorResponse"
  '/v1/querytest':
    x-swagger-router-controller: controller
    get:
      operationId: v1_queryTest
      responses:
        200:
          description: OK
          schema:
            type: string
        400:
          description: Bad parameters
          schema:
            $ref: "#/definitions/ErrorResponse"
        404:
          description: Coudnt locate the template
          schema:
            $ref: "#/definitions/ErrorResponse"
        500:
          description: Internal server error
          schema:
            $ref: "#/definitions/ErrorResponse"
  '/v1/auditLogs':
    x-swagger-router-controller: controller
    get:
      description: Retrive a list of available Products
      operationId: v1_auditLogs
      parameters:
        - name: page
          in: query
          type: integer
          description: Page number of the request
        - name: count
          in: query
          type: integer
          description: Number of brands per page
        - name: filter
          in: query
          type: string
      responses:
        200:
          description: List of the entites
          schema:
            $ref: "#/definitions/TemplateDefinition1"
        400:
          description: Bad parameters
        404:
          description: No products to list with the given parameter set.
        500:
          description: Internal server error
  '/v1/auditLogcount':
    x-swagger-router-controller:  controller
    get:
      operationId:  v1_auditLogCount
      parameters:
        - name:  filter
          in: query
          type: string
          description:  Count the number of fields after applying certain parameters
      responses:
        200:
          description:  sucess
          schema:
            type: string
        400:
          description:  Error
          schema:
            $ref: "#/definitions/ErrorResponse"
            
  /v1/batch:
    # binds a127 app logic to a route
    x-swagger-router-controller: controller
    get:
      description: Retrive a list of Batches
      operationId: v1_batchList
      parameters:
        - name: page
          in: query
          type: integer
          description: Page number of the request
        - name: count
          in: query
          type: integer
          description: Number of accounts per page 
        - name: filter
          in: query
          type: string
        - name: select
          in: query
          type: string
        - name : sort
          in : query
          type : string
      responses:
        200:
          description: lien lists
          schema:
            $ref: "#/definitions/TemplateDefinition1"
        400:
          description: Bad parameters
          schema:
            $ref: "#/definitions/ErrorResponse"
        404:
          description: No transaction available with the given parameter set.
          schema:
            $ref: "#/definitions/ErrorResponse"
        500:
          description: Internal server error
          schema:
            $ref: "#/definitions/ErrorResponse"
  /v1/batch/{id}:
    # binds a127 app logic to a route
    x-swagger-router-controller: controller
    get:
      description: get batch by id
      operationId: v1_batchShow
      parameters:
        - name: id
          in: path
          type: string 
          required : true
          description: Page number of the request
        - name: filter
          in: query
          type: string
        - name: select
          in: query
          type: string
      responses:
        200:
          description: lien lists
          schema:
            $ref: "#/definitions/TemplateDefinition1"
        400:
          description: Bad parameters
          schema:
            $ref: "#/definitions/ErrorResponse"
        404:
          description: No transaction available with the given parameter set.
          schema:
            $ref: "#/definitions/ErrorResponse"
        500:
          description: Internal server error
          schema:
            $ref: "#/definitions/ErrorResponse"
  /v1/batch/count:
    # binds a127 app logic to a route
    x-swagger-router-controller: controller
    get:
      description: Retrive a list of Liens
      operationId: v1_batchCount
      parameters:
        - name: filter
          in: query
          type: string
      responses:
        200:
          description: batch count
          schema:
            $ref: "#/definitions/TemplateDefinition1"
        400:
          description: Bad parameters
          schema:
            $ref: "#/definitions/ErrorResponse"
        404:
          description: No transaction available with the given parameter set.
          schema:
            $ref: "#/definitions/ErrorResponse"
        500:
          description: Internal server error
          schema:
            $ref: "#/definitions/ErrorResponse"
  /v1/batch/process:
    # binds a127 app logic to a route
    x-swagger-router-controller: controller
    post:
      description: process the Pending Batches
      operationId: v1_batchProcess
      responses:
        200:
          description: batch procssed 
          schema:
            $ref: "#/definitions/TemplateDefinition1"
        400:
          description: Bad parameters
          schema:
            $ref: "#/definitions/ErrorResponse"
        404:
          description: No transaction available with the given parameter set.
          schema:
            $ref: "#/definitions/ErrorResponse"
        500:
          description: Internal server error
          schema:
            $ref: "#/definitions/ErrorResponse"

  /swagger:
    x-swagger-pipe: swagger_raw
# complex objects have schema definitions
definitions:
  templateDefinition:
    properties:
      templateName:     { type: string , maxLength: 1024}
      templateDescription:  { type: string , maxLength: 1024}
      outputType :  
         type: string
         enum :
         - csv
         - xml
         - json
         - xls
      inputType :
         type : string
         enum :
         - csv
         - xml
         - json
         - xls
      templateType:
         type : string
         enum :
         - export
         - import
      header :
        type : object
        properties :
          rowFrom : { type: number }
          columnStart : { type: number }
          text : { type: string}
      body :
        type : object
        properties :
          rowFrom : { type: number }
          columnStart : { type: number }
          text : { type: string}
      footer :
        type : object
        properties :
          rowFrom : { type: number }
          columnStart : { type: number }
          text : { type: string}
      collectionName :
         type: string
      inputFilters:
        type: array
        items:
            $ref: "#/definitions/inputfilterdefinition"
      fieldDefinition :
         type: array
         items:
             $ref: "#/definitions/fieldDefinition"
  inputfilterdefinition :
    properties :
      name :  { type : string}
      type :  
        type : string
        enum :
        - Date
        - Datetime
        - Text
        - Textarea
        - Select
        - SelectMulti
      column : { type: string}
      value : { type: string}
  fieldDefinition :
    properties:
      name :  { type : string} 
      type :  
        type : string
        enum :
        - String
        - Number
        - Boolean
        - Array
        - Object
        - ArrayObject
        - Date
        - DateTime
      column :  { type : string} 
      min  :  { type : string} 
      isPrimaryKey :  { type : string} 
      delimiter :
        type : string
      Innerdelimiter : { type: string }
      isGrouped : { type: boolean }
      operation : { type: string }
      format: { type: string }
      isQueryBased : { type: boolean }
      queryFrom :
        type : string
        enum :
        - mongo
        - Elastic
      environment :
        type : string
        enum :
        - archive
        - production
      arrayObjectType :
         type: string
      elements :
        type: array
        items:
            $ref: "#/definitions/elementDefinition"
  elementDefinition :
    properties :
      name : { type : string}
      type:  { type : string}
  # namefield :
  #   properties :
  #       type : { type: string}
  #       column : { type: string}
  TempllateResponse:
    properties:
      message:
        type: string
  ErrorResponse:
    properties:
      error:
        type: string
  TemplateDefinition1:
    properties:
      _id:
        type: string
